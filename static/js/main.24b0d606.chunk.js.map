{"version":3,"sources":["components/molecules/card/card.module.css","components/organisms/cardList/cardList.module.css","services/movieList.service.js","components/atoms/title/Title.jsx","components/atoms/button/Button.jsx","components/atoms/tooltip/Tooltip.jsx","components/molecules/tooltipOverlay/TooltipOverlay.jsx","components/molecules/card/Card.jsx","components/molecules/alert/Alert.jsx","components/molecules/skeletons/cardSkeleton/CardSkeleton.jsx","components/molecules/pagination/Pagination.jsx","components/organisms/cardList/CardList.jsx","components/errorBoundary/ErrorBoundary.jsx","pages/movieList/MovieList.jsx","App.js","index.js"],"names":["module","exports","API_KEY","process","API_BASE_URL","getMoviesByTitle","title","page","axios","get","OffcanvasTitle","Button","Tooltip","TooltipOverlay","text","OverlayTrigger","placement","delay","show","hide","overlay","id","Card","footer","header","imageUrl","bg","className","Header","bsPrefix","styles","cardTitle","Img","alt","image","loading","src","variant","Footer","Alert","isOpen","message","useState","setShow","useLayoutEffect","setTimeout","dismissible","onClose","Heading","defaultProps","CardSkeleton","Placeholder","xs","as","Text","animation","Title","Pagination","noOfPages","currentPage","setCurrentPage","First","disabled","onClick","Array","keys","slice","map","element","index","Item","active","Last","CardList","isLoading","list","Row","container","lg","md","sm","xl","xxl","_","Col","Poster","size","imdbID","ErrorBoundary","props","state","hasError","errorMessage","error","errorInfo","console","this","children","React","Component","MovieList","setNoOfPages","movieList","setMovieList","setError","setIsLoading","loadMovies","response","data","Response","Error","Math","ceil","totalResults","Search","useEffect","Container","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.24b0d606.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardTitle\":\"card_cardTitle__3GZsD\",\"image\":\"card_image__1ghFu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cardList_container__2apDn\"};","import axios from \"axios\";\r\n\r\nconst API_KEY = process.env.REACT_APP_OMDB_KEY;\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst getMoviesByTitle = (title, page = 1) =>\r\n  axios.get(`${API_BASE_URL}/?apikey=${API_KEY}&s=${title}&page=${page}`);\r\n\r\nexport { getMoviesByTitle };\r\n","import OffcanvasTitle from \"react-bootstrap/OffcanvasTitle\";\r\n\r\nexport default OffcanvasTitle;\r\n","import Button from \"react-bootstrap/Button\";\r\n\r\nexport default Button;\r\n","import Tooltip from \"react-bootstrap/Tooltip\";\r\n\r\nexport default Tooltip;\r\n","import PropTypes from \"prop-types\";\r\nimport { OffcanvasTitle } from \"react-bootstrap\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\n\r\nimport { Tooltip } from \"../../atoms\";\r\n\r\nconst TooltipOverlay = ({ text }) => (\r\n    <OverlayTrigger\r\n        placement=\"bottom\"\r\n        delay={{ show: 250, hide: 400 }}\r\n        overlay={\r\n            <Tooltip id={text}>\r\n                {text}\r\n            </Tooltip>\r\n        }\r\n    >\r\n        <OffcanvasTitle>{text}</OffcanvasTitle>\r\n    </OverlayTrigger>\r\n)\r\n\r\nTooltipOverlay.propTypes = {\r\n    text: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\r\n};\r\n\r\nexport default TooltipOverlay;\r\n","import PropTypes from \"prop-types\";\r\nimport { Card as BCard } from \"react-bootstrap\";\r\n\r\nimport styles from \"./card.module.css\";\r\nimport { TooltipOverlay } from \"../tooltipOverlay\";\r\n\r\nconst Card = ({ footer, header, imageUrl }) => (\r\n  <BCard bg=\"light\" className=\"shadow\">\r\n    <BCard.Header\r\n      bsPrefix=\"card-header bg-white\"\r\n      className={styles.cardTitle}>\r\n      <TooltipOverlay text={header} />\r\n    </BCard.Header>\r\n    <BCard.Img\r\n      alt={header}\r\n      className={styles.image}\r\n      loading=\"lazy\"\r\n      src={imageUrl}\r\n      variant=\"top\"\r\n    />\r\n    <BCard.Footer\r\n      bsPrefix=\"card-footer bg-white d-flex justify-content-between\">\r\n      {footer}\r\n    </BCard.Footer>\r\n  </BCard>\r\n);\r\n\r\nCard.propTypes = {\r\n  footer: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\r\n  header: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\r\n  imageUrl: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired\r\n};\r\n\r\nexport default Card;\r\n","import PropTypes from \"prop-types\";\r\nimport { useLayoutEffect, useState } from \"react\";\r\nimport { Alert as BAlert } from \"react-bootstrap\";\r\n\r\nconst Alert = ({ isOpen, message, title, variant }) => {\r\n    const [show, setShow] = useState(isOpen);\r\n\r\n    useLayoutEffect(() => {\r\n        setTimeout(() => {\r\n            setShow(false);\r\n        }, 3000);\r\n    }, []);\r\n\r\n    return (\r\n        <BAlert\r\n            dismissible\r\n            show={show}\r\n            onClose={() => setShow(false)}\r\n            variant={variant}>\r\n            <BAlert.Heading>{title}</BAlert.Heading>\r\n            <p>{message}</p>\r\n        </BAlert>\r\n    );\r\n}\r\n\r\nAlert.propTypes = {\r\n    isOpen: PropTypes.bool,\r\n    message: PropTypes.string.isRequired,\r\n    title: PropTypes.string,\r\n    variant: PropTypes.oneOf([\r\n        'primary',\r\n        'secondary',\r\n        'success',\r\n        'danger',\r\n        'warning',\r\n        'info',\r\n        'dark',\r\n        'light'\r\n    ])\r\n};\r\n\r\nAlert.defaultProps = {\r\n    isOpen: false,\r\n    title: 'Error',\r\n    variant: 'danger'\r\n};\r\n\r\nexport default Alert;\r\n","import { Placeholder } from \"react-bootstrap\";\r\n\r\nimport { Card } from \"../../card\";\r\n\r\nconst CardSkeleton = () => (\r\n    <Card\r\n        footer={\r\n            <>\r\n                <Placeholder.Button variant=\"outline-primary\" xs={5}>\r\n                    <Placeholder as={Card.Text} animation=\"glow\">\r\n                        <Placeholder xs={8} />\r\n                    </Placeholder>\r\n                </Placeholder.Button>\r\n                <Placeholder.Button variant=\"outline-success\" xs={5}>\r\n                    <Placeholder as={Card.Text} animation=\"glow\">\r\n                        <Placeholder xs={8} />\r\n                    </Placeholder>\r\n                </Placeholder.Button>\r\n            </>\r\n        }\r\n        header={\r\n            <Placeholder as={Card.Title} animation=\"glow\">\r\n                <Placeholder xs={6} />\r\n            </Placeholder>\r\n        }\r\n        imageUrl=\"movie_placeholder.webp\"\r\n    />\r\n);\r\n\r\nexport default CardSkeleton;\r\n","import React from \"react\";\r\nimport { Pagination as BPagination } from \"react-bootstrap\";\r\n\r\nconst Pagination = ({ noOfPages, currentPage, setCurrentPage }) => (\r\n    <BPagination className=\"my-4 flex-wrap\">\r\n        <BPagination.First\r\n            disabled={currentPage === 1}\r\n            onClick={() => setCurrentPage(currentPage - 1)} />\r\n        {[...Array(noOfPages + 1).keys()].slice(1)?.map((element, index) => (\r\n            <BPagination.Item\r\n                active={currentPage === element}\r\n                key={index}\r\n                onClick={() => setCurrentPage(element)}\r\n            >\r\n                {element}\r\n            </BPagination.Item>\r\n        ))}\r\n        <BPagination.Last\r\n            disabled={currentPage === noOfPages}\r\n            onClick={() => setCurrentPage(currentPage + 1)} />\r\n    </BPagination>\r\n);\r\n\r\nexport default Pagination;\r\n","import PropTypes from \"prop-types\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nimport styles from \"./cardList.module.css\";\r\nimport { Button, Title } from \"../../atoms\";\r\nimport { Card, CardSkeleton } from \"../../molecules\";\r\n\r\nconst CardList = ({ isLoading, list, title }) => (\r\n  <>\r\n    <Title as=\"h2\" className=\"mt-2\">{title}</Title>\r\n    <Row\r\n      className={`g-4 mx-0 my-2 ${styles.container}`}\r\n      lg={5}\r\n      md={3}\r\n      sm={2}\r\n      xl={5}\r\n      xs={1}\r\n      xxl={5}\r\n    >\r\n      {isLoading ?\r\n        [...Array(11).keys()].slice(1)?.map((_, index) => (\r\n          <Col key={index}>\r\n            <CardSkeleton />\r\n          </Col>\r\n        ))\r\n        :\r\n        list?.map((element) => (\r\n          <Col key={element?.imdbID}>\r\n            <Card\r\n              header={element?.Title}\r\n              imageUrl={element?.Poster}\r\n              footer={<>\r\n                <Button size=\"sm\" variant=\"outline-primary\">LIKE</Button>\r\n                <Button size=\"sm\" variant=\"outline-success\">OWN</Button>\r\n              </>}\r\n            />\r\n          </Col>\r\n        ))}\r\n    </Row>\r\n  </>\r\n);\r\n\r\nCardList.propTypes = {\r\n  isLoading: PropTypes.bool,\r\n  list: PropTypes.array.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nCardList.defaultProps = {\r\n  isLoading: false,\r\n  title: 'Sample Movie List'\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nimport { Alert } from \"../molecules\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false, errorMessage: '' };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true, errorMessage: error };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // You can also log the error to an error reporting service\r\n        console.error(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return <Alert\r\n                isOpen={this.state.hasError}\r\n                message={this.state.errorMessage}\r\n                title=\"Something went wrong\"\r\n            />;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { getMoviesByTitle } from \"../../services\";\r\nimport { Alert, CardList, Pagination } from \"../../components\";\r\n\r\nconst MovieList = () => {\r\n  const [noOfPages, setNoOfPages] = useState(0);\r\n  const [movieList, setMovieList] = useState({});\r\n  const [error, setError] = useState({ hasError: false, message: '' });\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const loadMovies = async (page = 1) => {\r\n    if (movieList[page]) return;\r\n    setIsLoading(true);\r\n    try {\r\n      // using random search string for demonstration purpose\r\n      const { data: response } = await getMoviesByTitle(\"Kung fu Panda\", page);\r\n      if (response?.Response === \"False\") {\r\n        setError(({ hasError: true, message: response?.Error }));\r\n      } else {\r\n        if (noOfPages === 0)\r\n          setNoOfPages(Math.ceil(response?.totalResults / 10));\r\n        setMovieList(movieList => ({\r\n          ...movieList,\r\n          [currentPage]: response?.Search\r\n        }));\r\n        setError(({ hasError: false, message: '' }));\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(({ hasError: true, message: error }));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadMovies(currentPage);\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <Container className=\"d-flex flex-column align-items-center\">\r\n      {error.hasError && (\r\n        <Alert\r\n          isOpen={error.hasError}\r\n          message={error.message}\r\n        />\r\n      )}\r\n      <CardList list={movieList[currentPage] ?? []} isLoading={isLoading} />\r\n      {noOfPages > 1 && <Pagination\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        noOfPages={noOfPages}\r\n      />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import \"./styles.css\";\nimport { MovieList } from \"./pages\";\nimport { ErrorBoundary } from \"./components\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <ErrorBoundary>\n        <MovieList />\n      </ErrorBoundary>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}